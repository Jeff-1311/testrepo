#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trudoyomkost
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="D:\\Projects\\Trudoyomkost\\Trudoyomkost\\TrudoyomkostDB.sdf")]
	public partial class TrudoyomkostDBContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInfDepList(InfDepList instance);
    partial void UpdateInfDepList(InfDepList instance);
    partial void DeleteInfDepList(InfDepList instance);
    partial void InsertInfDet(InfDet instance);
    partial void UpdateInfDet(InfDet instance);
    partial void DeleteInfDet(InfDet instance);
    partial void InsertInfProducts(InfProducts instance);
    partial void UpdateInfProducts(InfProducts instance);
    partial void DeleteInfProducts(InfProducts instance);
    partial void InsertLabourNorm(LabourNorm instance);
    partial void UpdateLabourNorm(LabourNorm instance);
    partial void DeleteLabourNorm(LabourNorm instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertWhereOperationUse(WhereOperationUse instance);
    partial void UpdateWhereOperationUse(WhereOperationUse instance);
    partial void DeleteWhereOperationUse(WhereOperationUse instance);
    #endregion
		
		public TrudoyomkostDBContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TrudoyomkostDBContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TrudoyomkostDBContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TrudoyomkostDBContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InfDepList> InfDepList
		{
			get
			{
				return this.GetTable<InfDepList>();
			}
		}
		
		public System.Data.Linq.Table<InfDet> InfDet
		{
			get
			{
				return this.GetTable<InfDet>();
			}
		}
		
		public System.Data.Linq.Table<InfProducts> InfProducts
		{
			get
			{
				return this.GetTable<InfProducts>();
			}
		}
		
		public System.Data.Linq.Table<InfProfession> InfProfession
		{
			get
			{
				return this.GetTable<InfProfession>();
			}
		}
		
		public System.Data.Linq.Table<InfTariff> InfTariff
		{
			get
			{
				return this.GetTable<InfTariff>();
			}
		}
		
		public System.Data.Linq.Table<LabourNorm> LabourNorm
		{
			get
			{
				return this.GetTable<LabourNorm>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<WhereOperationUse> WhereOperationUse
		{
			get
			{
				return this.GetTable<WhereOperationUse>();
			}
		}
		
		public System.Data.Linq.Table<WhereUse> WhereUse
		{
			get
			{
				return this.GetTable<WhereUse>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="infDepList")]
	public partial class InfDepList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private short _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(short value);
    partial void OnCodeChanged();
    #endregion
		
		public InfDepList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="SmallInt NOT NULL")]
		public short Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="infDet")]
	public partial class InfDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DetNum;
		
		private string _PKP;
		
		private System.Nullable<int> _DepProducer;
		
		private string _SignIrregDet;
		
		private System.Nullable<byte> _IndicOSPK;
		
		private string _DocNum;
		
		private System.Nullable<int> _DepNative;
		
		private System.Nullable<bool> _Available;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDetNumChanging(string value);
    partial void OnDetNumChanged();
    partial void OnPKPChanging(string value);
    partial void OnPKPChanged();
    partial void OnDepProducerChanging(System.Nullable<int> value);
    partial void OnDepProducerChanged();
    partial void OnSignIrregDetChanging(string value);
    partial void OnSignIrregDetChanged();
    partial void OnIndicOSPKChanging(System.Nullable<byte> value);
    partial void OnIndicOSPKChanged();
    partial void OnDocNumChanging(string value);
    partial void OnDocNumChanged();
    partial void OnDepNativeChanging(System.Nullable<int> value);
    partial void OnDepNativeChanged();
    partial void OnAvailableChanging(System.Nullable<bool> value);
    partial void OnAvailableChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public InfDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetNum", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string DetNum
		{
			get
			{
				return this._DetNum;
			}
			set
			{
				if ((this._DetNum != value))
				{
					this.OnDetNumChanging(value);
					this.SendPropertyChanging();
					this._DetNum = value;
					this.SendPropertyChanged("DetNum");
					this.OnDetNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKP", DbType="NChar(2)")]
		public string PKP
		{
			get
			{
				return this._PKP;
			}
			set
			{
				if ((this._PKP != value))
				{
					this.OnPKPChanging(value);
					this.SendPropertyChanging();
					this._PKP = value;
					this.SendPropertyChanged("PKP");
					this.OnPKPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepProducer", DbType="Int")]
		public System.Nullable<int> DepProducer
		{
			get
			{
				return this._DepProducer;
			}
			set
			{
				if ((this._DepProducer != value))
				{
					this.OnDepProducerChanging(value);
					this.SendPropertyChanging();
					this._DepProducer = value;
					this.SendPropertyChanged("DepProducer");
					this.OnDepProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignIrregDet", DbType="NChar(1)")]
		public string SignIrregDet
		{
			get
			{
				return this._SignIrregDet;
			}
			set
			{
				if ((this._SignIrregDet != value))
				{
					this.OnSignIrregDetChanging(value);
					this.SendPropertyChanging();
					this._SignIrregDet = value;
					this.SendPropertyChanged("SignIrregDet");
					this.OnSignIrregDetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndicOSPK", DbType="TinyInt")]
		public System.Nullable<byte> IndicOSPK
		{
			get
			{
				return this._IndicOSPK;
			}
			set
			{
				if ((this._IndicOSPK != value))
				{
					this.OnIndicOSPKChanging(value);
					this.SendPropertyChanging();
					this._IndicOSPK = value;
					this.SendPropertyChanged("IndicOSPK");
					this.OnIndicOSPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNum", DbType="NVarChar(100)")]
		public string DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepNative", DbType="Int")]
		public System.Nullable<int> DepNative
		{
			get
			{
				return this._DepNative;
			}
			set
			{
				if ((this._DepNative != value))
				{
					this.OnDepNativeChanging(value);
					this.SendPropertyChanging();
					this._DepNative = value;
					this.SendPropertyChanged("DepNative");
					this.OnDepNativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit")]
		public System.Nullable<bool> Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="infProducts")]
	public partial class InfProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Cipher;
		
		private string _Product;
		
		private string _ProductTotal;
		
		private byte _Mask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCipherChanging(short value);
    partial void OnCipherChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnProductTotalChanging(string value);
    partial void OnProductTotalChanged();
    partial void OnMaskChanging(byte value);
    partial void OnMaskChanged();
    #endregion
		
		public InfProducts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cipher", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Cipher
		{
			get
			{
				return this._Cipher;
			}
			set
			{
				if ((this._Cipher != value))
				{
					this.OnCipherChanging(value);
					this.SendPropertyChanging();
					this._Cipher = value;
					this.SendPropertyChanged("Cipher");
					this.OnCipherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTotal", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string ProductTotal
		{
			get
			{
				return this._ProductTotal;
			}
			set
			{
				if ((this._ProductTotal != value))
				{
					this.OnProductTotalChanging(value);
					this.SendPropertyChanging();
					this._ProductTotal = value;
					this.SendPropertyChanged("ProductTotal");
					this.OnProductTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mask", DbType="TinyInt NOT NULL")]
		public byte Mask
		{
			get
			{
				return this._Mask;
			}
			set
			{
				if ((this._Mask != value))
				{
					this.OnMaskChanging(value);
					this.SendPropertyChanging();
					this._Mask = value;
					this.SendPropertyChanged("Mask");
					this.OnMaskChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="infProfession")]
	public partial class InfProfession
	{
		
		private int _ProfCode;
		
		private string _Name;
		
		private string _NameKindWork;
		
		private int _LangCode;
		
		public InfProfession()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfCode", DbType="Int NOT NULL")]
		public int ProfCode
		{
			get
			{
				return this._ProfCode;
			}
			set
			{
				if ((this._ProfCode != value))
				{
					this._ProfCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKindWork", DbType="NVarChar(50)")]
		public string NameKindWork
		{
			get
			{
				return this._NameKindWork;
			}
			set
			{
				if ((this._NameKindWork != value))
				{
					this._NameKindWork = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangCode", DbType="Int NOT NULL")]
		public int LangCode
		{
			get
			{
				return this._LangCode;
			}
			set
			{
				if ((this._LangCode != value))
				{
					this._LangCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="infTariff")]
	public partial class InfTariff
	{
		
		private byte _TariffNetNum;
		
		private string _KindPay;
		
		private double _WorkerRate;
		
		private double _HourCost;
		
		public InfTariff()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffNetNum", DbType="TinyInt NOT NULL")]
		public byte TariffNetNum
		{
			get
			{
				return this._TariffNetNum;
			}
			set
			{
				if ((this._TariffNetNum != value))
				{
					this._TariffNetNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindPay", DbType="NChar(1) NOT NULL", CanBeNull=false)]
		public string KindPay
		{
			get
			{
				return this._KindPay;
			}
			set
			{
				if ((this._KindPay != value))
				{
					this._KindPay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerRate", DbType="Float NOT NULL")]
		public double WorkerRate
		{
			get
			{
				return this._WorkerRate;
			}
			set
			{
				if ((this._WorkerRate != value))
				{
					this._WorkerRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourCost", DbType="Float NOT NULL")]
		public double HourCost
		{
			get
			{
				return this._HourCost;
			}
			set
			{
				if ((this._HourCost != value))
				{
					this._HourCost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class LabourNorm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InfDetID;
		
		private string _OperNum;
		
		private double _DepRegion;
		
		private int _ProfCode;
		
		private string _NameKindWork;
		
		private string _KindPay;
		
		private byte _TariffNetNum;
		
		private double _WorkerRate;
		
		private double _ItemCTN;
		
		private double _PreparTimeCTN;
		
		private double _ItemPayNorm;
		
		private double _PreparTimePayNorm;
		
		private double _Valuation;
		
		private System.Nullable<double> _ValPreparTime;
		
		private double _CoeffCTN;
		
		private string _DocNum;
		
		private System.DateTime _Date;
		
		private string _TaskNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInfDetIDChanging(int value);
    partial void OnInfDetIDChanged();
    partial void OnOperNumChanging(string value);
    partial void OnOperNumChanged();
    partial void OnDepRegionChanging(double value);
    partial void OnDepRegionChanged();
    partial void OnProfCodeChanging(int value);
    partial void OnProfCodeChanged();
    partial void OnNameKindWorkChanging(string value);
    partial void OnNameKindWorkChanged();
    partial void OnKindPayChanging(string value);
    partial void OnKindPayChanged();
    partial void OnTariffNetNumChanging(byte value);
    partial void OnTariffNetNumChanged();
    partial void OnWorkerRateChanging(double value);
    partial void OnWorkerRateChanged();
    partial void OnItemCTNChanging(double value);
    partial void OnItemCTNChanged();
    partial void OnPreparTimeCTNChanging(double value);
    partial void OnPreparTimeCTNChanged();
    partial void OnItemPayNormChanging(double value);
    partial void OnItemPayNormChanged();
    partial void OnPreparTimePayNormChanging(double value);
    partial void OnPreparTimePayNormChanged();
    partial void OnValuationChanging(double value);
    partial void OnValuationChanged();
    partial void OnValPreparTimeChanging(System.Nullable<double> value);
    partial void OnValPreparTimeChanged();
    partial void OnCoeffCTNChanging(double value);
    partial void OnCoeffCTNChanged();
    partial void OnDocNumChanging(string value);
    partial void OnDocNumChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTaskNumberChanging(string value);
    partial void OnTaskNumberChanged();
    #endregion
		
		public LabourNorm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="infDetID", Storage="_InfDetID", DbType="Int NOT NULL")]
		public int InfDetID
		{
			get
			{
				return this._InfDetID;
			}
			set
			{
				if ((this._InfDetID != value))
				{
					this.OnInfDetIDChanging(value);
					this.SendPropertyChanging();
					this._InfDetID = value;
					this.SendPropertyChanged("InfDetID");
					this.OnInfDetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperNum", DbType="NVarChar(100)")]
		public string OperNum
		{
			get
			{
				return this._OperNum;
			}
			set
			{
				if ((this._OperNum != value))
				{
					this.OnOperNumChanging(value);
					this.SendPropertyChanging();
					this._OperNum = value;
					this.SendPropertyChanged("OperNum");
					this.OnOperNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepRegion", DbType="Float NOT NULL")]
		public double DepRegion
		{
			get
			{
				return this._DepRegion;
			}
			set
			{
				if ((this._DepRegion != value))
				{
					this.OnDepRegionChanging(value);
					this.SendPropertyChanging();
					this._DepRegion = value;
					this.SendPropertyChanged("DepRegion");
					this.OnDepRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfCode", DbType="Int NOT NULL")]
		public int ProfCode
		{
			get
			{
				return this._ProfCode;
			}
			set
			{
				if ((this._ProfCode != value))
				{
					this.OnProfCodeChanging(value);
					this.SendPropertyChanging();
					this._ProfCode = value;
					this.SendPropertyChanged("ProfCode");
					this.OnProfCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKindWork", DbType="NVarChar(50)")]
		public string NameKindWork
		{
			get
			{
				return this._NameKindWork;
			}
			set
			{
				if ((this._NameKindWork != value))
				{
					this.OnNameKindWorkChanging(value);
					this.SendPropertyChanging();
					this._NameKindWork = value;
					this.SendPropertyChanged("NameKindWork");
					this.OnNameKindWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindPay", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string KindPay
		{
			get
			{
				return this._KindPay;
			}
			set
			{
				if ((this._KindPay != value))
				{
					this.OnKindPayChanging(value);
					this.SendPropertyChanging();
					this._KindPay = value;
					this.SendPropertyChanged("KindPay");
					this.OnKindPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffNetNum", DbType="TinyInt NOT NULL")]
		public byte TariffNetNum
		{
			get
			{
				return this._TariffNetNum;
			}
			set
			{
				if ((this._TariffNetNum != value))
				{
					this.OnTariffNetNumChanging(value);
					this.SendPropertyChanging();
					this._TariffNetNum = value;
					this.SendPropertyChanged("TariffNetNum");
					this.OnTariffNetNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerRate", DbType="Float NOT NULL")]
		public double WorkerRate
		{
			get
			{
				return this._WorkerRate;
			}
			set
			{
				if ((this._WorkerRate != value))
				{
					this.OnWorkerRateChanging(value);
					this.SendPropertyChanging();
					this._WorkerRate = value;
					this.SendPropertyChanged("WorkerRate");
					this.OnWorkerRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCTN", DbType="Float NOT NULL")]
		public double ItemCTN
		{
			get
			{
				return this._ItemCTN;
			}
			set
			{
				if ((this._ItemCTN != value))
				{
					this.OnItemCTNChanging(value);
					this.SendPropertyChanging();
					this._ItemCTN = value;
					this.SendPropertyChanged("ItemCTN");
					this.OnItemCTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparTimeCTN", DbType="Float NOT NULL")]
		public double PreparTimeCTN
		{
			get
			{
				return this._PreparTimeCTN;
			}
			set
			{
				if ((this._PreparTimeCTN != value))
				{
					this.OnPreparTimeCTNChanging(value);
					this.SendPropertyChanging();
					this._PreparTimeCTN = value;
					this.SendPropertyChanged("PreparTimeCTN");
					this.OnPreparTimeCTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPayNorm", DbType="Float NOT NULL")]
		public double ItemPayNorm
		{
			get
			{
				return this._ItemPayNorm;
			}
			set
			{
				if ((this._ItemPayNorm != value))
				{
					this.OnItemPayNormChanging(value);
					this.SendPropertyChanging();
					this._ItemPayNorm = value;
					this.SendPropertyChanged("ItemPayNorm");
					this.OnItemPayNormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparTimePayNorm", DbType="Float NOT NULL")]
		public double PreparTimePayNorm
		{
			get
			{
				return this._PreparTimePayNorm;
			}
			set
			{
				if ((this._PreparTimePayNorm != value))
				{
					this.OnPreparTimePayNormChanging(value);
					this.SendPropertyChanging();
					this._PreparTimePayNorm = value;
					this.SendPropertyChanged("PreparTimePayNorm");
					this.OnPreparTimePayNormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valuation", DbType="Float NOT NULL")]
		public double Valuation
		{
			get
			{
				return this._Valuation;
			}
			set
			{
				if ((this._Valuation != value))
				{
					this.OnValuationChanging(value);
					this.SendPropertyChanging();
					this._Valuation = value;
					this.SendPropertyChanged("Valuation");
					this.OnValuationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValPreparTime", DbType="Float")]
		public System.Nullable<double> ValPreparTime
		{
			get
			{
				return this._ValPreparTime;
			}
			set
			{
				if ((this._ValPreparTime != value))
				{
					this.OnValPreparTimeChanging(value);
					this.SendPropertyChanging();
					this._ValPreparTime = value;
					this.SendPropertyChanged("ValPreparTime");
					this.OnValPreparTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoeffCTN", DbType="Float NOT NULL")]
		public double CoeffCTN
		{
			get
			{
				return this._CoeffCTN;
			}
			set
			{
				if ((this._CoeffCTN != value))
				{
					this.OnCoeffCTNChanging(value);
					this.SendPropertyChanging();
					this._CoeffCTN = value;
					this.SendPropertyChanged("CoeffCTN");
					this.OnCoeffCTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNum", DbType="NVarChar(100)")]
		public string DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskNumber", DbType="NVarChar(30)")]
		public string TaskNumber
		{
			get
			{
				return this._TaskNumber;
			}
			set
			{
				if ((this._TaskNumber != value))
				{
					this.OnTaskNumberChanging(value);
					this.SendPropertyChanging();
					this._TaskNumber = value;
					this.SendPropertyChanged("TaskNumber");
					this.OnTaskNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _UserPass;
		
		private byte _UserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPassChanging(string value);
    partial void OnUserPassChanged();
    partial void OnUserRoleChanging(byte value);
    partial void OnUserRoleChanged();
    #endregion
		
		public Users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPass", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string UserPass
		{
			get
			{
				return this._UserPass;
			}
			set
			{
				if ((this._UserPass != value))
				{
					this.OnUserPassChanging(value);
					this.SendPropertyChanging();
					this._UserPass = value;
					this.SendPropertyChanged("UserPass");
					this.OnUserPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="TinyInt NOT NULL")]
		public byte UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="whereOperationUse")]
	public partial class WhereOperationUse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabourNormID;
		
		private int _SeriaFrom;
		
		private int _SeriaTo;
		
		private short _InfProductsChipher;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabourNormIDChanging(int value);
    partial void OnLabourNormIDChanged();
    partial void OnSeriaFromChanging(int value);
    partial void OnSeriaFromChanged();
    partial void OnSeriaToChanging(int value);
    partial void OnSeriaToChanged();
    partial void OnInfProductsChipherChanging(short value);
    partial void OnInfProductsChipherChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public WhereOperationUse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourNormID", DbType="Int NOT NULL")]
		public int LabourNormID
		{
			get
			{
				return this._LabourNormID;
			}
			set
			{
				if ((this._LabourNormID != value))
				{
					this.OnLabourNormIDChanging(value);
					this.SendPropertyChanging();
					this._LabourNormID = value;
					this.SendPropertyChanged("LabourNormID");
					this.OnLabourNormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriaFrom", DbType="Int NOT NULL")]
		public int SeriaFrom
		{
			get
			{
				return this._SeriaFrom;
			}
			set
			{
				if ((this._SeriaFrom != value))
				{
					this.OnSeriaFromChanging(value);
					this.SendPropertyChanging();
					this._SeriaFrom = value;
					this.SendPropertyChanged("SeriaFrom");
					this.OnSeriaFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriaTo", DbType="Int NOT NULL")]
		public int SeriaTo
		{
			get
			{
				return this._SeriaTo;
			}
			set
			{
				if ((this._SeriaTo != value))
				{
					this.OnSeriaToChanging(value);
					this.SendPropertyChanging();
					this._SeriaTo = value;
					this.SendPropertyChanged("SeriaTo");
					this.OnSeriaToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="infProductsChipher", Storage="_InfProductsChipher", DbType="SmallInt NOT NULL")]
		public short InfProductsChipher
		{
			get
			{
				return this._InfProductsChipher;
			}
			set
			{
				if ((this._InfProductsChipher != value))
				{
					this.OnInfProductsChipherChanging(value);
					this.SendPropertyChanging();
					this._InfProductsChipher = value;
					this.SendPropertyChanged("InfProductsChipher");
					this.OnInfProductsChipherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="whereUse")]
	public partial class WhereUse
	{
		
		private int _InfDetID;
		
		private int _SeriaFrom;
		
		private int _SeriaTo;
		
		private System.Nullable<int> _DepConsumer;
		
		private System.Nullable<int> _DepThermal1;
		
		private System.Nullable<int> _DepThermal2;
		
		private System.Nullable<int> _DepPainting1;
		
		private System.Nullable<int> _DepPainting2;
		
		private System.Nullable<int> _DepPainting3;
		
		private int _CountPerProduct;
		
		private short _InfProductsCipher;
		
		public WhereUse()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="infDetID", Storage="_InfDetID", DbType="Int NOT NULL")]
		public int InfDetID
		{
			get
			{
				return this._InfDetID;
			}
			set
			{
				if ((this._InfDetID != value))
				{
					this._InfDetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriaFrom", DbType="Int NOT NULL")]
		public int SeriaFrom
		{
			get
			{
				return this._SeriaFrom;
			}
			set
			{
				if ((this._SeriaFrom != value))
				{
					this._SeriaFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriaTo", DbType="Int NOT NULL")]
		public int SeriaTo
		{
			get
			{
				return this._SeriaTo;
			}
			set
			{
				if ((this._SeriaTo != value))
				{
					this._SeriaTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepConsumer", DbType="Int")]
		public System.Nullable<int> DepConsumer
		{
			get
			{
				return this._DepConsumer;
			}
			set
			{
				if ((this._DepConsumer != value))
				{
					this._DepConsumer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepThermal1", DbType="Int")]
		public System.Nullable<int> DepThermal1
		{
			get
			{
				return this._DepThermal1;
			}
			set
			{
				if ((this._DepThermal1 != value))
				{
					this._DepThermal1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepThermal2", DbType="Int")]
		public System.Nullable<int> DepThermal2
		{
			get
			{
				return this._DepThermal2;
			}
			set
			{
				if ((this._DepThermal2 != value))
				{
					this._DepThermal2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepPainting1", DbType="Int")]
		public System.Nullable<int> DepPainting1
		{
			get
			{
				return this._DepPainting1;
			}
			set
			{
				if ((this._DepPainting1 != value))
				{
					this._DepPainting1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepPainting2", DbType="Int")]
		public System.Nullable<int> DepPainting2
		{
			get
			{
				return this._DepPainting2;
			}
			set
			{
				if ((this._DepPainting2 != value))
				{
					this._DepPainting2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepPainting3", DbType="Int")]
		public System.Nullable<int> DepPainting3
		{
			get
			{
				return this._DepPainting3;
			}
			set
			{
				if ((this._DepPainting3 != value))
				{
					this._DepPainting3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountPerProduct", DbType="Int NOT NULL")]
		public int CountPerProduct
		{
			get
			{
				return this._CountPerProduct;
			}
			set
			{
				if ((this._CountPerProduct != value))
				{
					this._CountPerProduct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="infProductsCipher", Storage="_InfProductsCipher", DbType="SmallInt NOT NULL")]
		public short InfProductsCipher
		{
			get
			{
				return this._InfProductsCipher;
			}
			set
			{
				if ((this._InfProductsCipher != value))
				{
					this._InfProductsCipher = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
